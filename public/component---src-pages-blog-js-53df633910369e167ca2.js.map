{"version":3,"sources":["webpack:///./src/pages/blog.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["BlogIndex","render","data","this","props","_data$site$siteMetada","site","siteMetadata","title","description","posts","social","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","location","avatar","author","hasNavbar","_components_seo__WEBPACK_IMPORTED_MODULE_4__","keywords","map","p","_p$node","node","_p$node$frontmatter","frontmatter","id","publishedAt","excerpt","slug","fields","key","style","marginBottom","rhythm","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","textDecoration","display","color","dangerouslySetInnerHTML","__html","React","Component","pageQuery","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","Consumer","staticQueryData","query","children","Error","propTypes","PropTypes","object","string","isRequired","func","scale","typography__WEBPACK_IMPORTED_MODULE_0__","defaultFontFamilies","typo","Typography","headerFontFamily","concat","bodyFontFamily","baseFontSize","baseLineHeight","m","module","exports","require","default","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Layout","_this$props","_this$props$hasNavbar","react__WEBPACK_IMPORTED_MODULE_2___default","marginLeft","marginRight","maxWidth","padding","Fragment","textAlign","gatsby_image__WEBPACK_IMPORTED_MODULE_4___default","fixed","childImageSharp","alt","minWidth","borderRadius","listStyle","margin","justifyContent","gatsby__WEBPACK_IMPORTED_MODULE_3__","SEO","lang","meta","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf"],"mappings":"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","file":"component---src-pages-blog-js-53df633910369e167ca2.js","sourcesContent":["import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport { rhythm } from \"../utils/typography\";\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props;\n    const { title, description, social } = data.site.siteMetadata;\n    const posts = data.allMarkdownRemark.edges;\n\n    return (\n      <Layout\n        location={this.props.location}\n        title={title}\n        avatar={data.avatar}\n        author={data.site.siteMetadata.author}\n        hasNavbar={true}\n      >\n        <SEO\n          title={title}\n          description={description}\n          keywords={[\n            `farzad yz`,\n            `javascript`,\n            `react`,\n            `redux`,\n            `typescript`,\n            `nodejs`,\n            `reasonml`,\n            `elm`,\n            `graphql`,\n            `golang`,\n            `automation`,\n            `architecture`,\n            `dx`,\n            `tooling`,\n            `state management`,\n            `react native`\n          ]}\n        />\n        <main>\n          {posts.map(p => {\n            const {\n              node: {\n                frontmatter: { title, id, publishedAt },\n                excerpt,\n                fields: { slug }\n              }\n            } = p;\n            return (\n              <article key={id} style={{ marginBottom: rhythm(2) }}>\n                <h2 style={{ marginBottom: rhythm(1 / 2) }}>\n                  <Link to={slug} style={{ textDecoration: \"none\" }}>\n                    {title}\n                  </Link>\n                </h2>\n                <date\n                  style={{\n                    marginBottom: rhythm(1 / 2),\n                    display: \"block\",\n                    color: \"#777\"\n                  }}\n                >\n                  {publishedAt}\n                </date>\n                <div dangerouslySetInnerHTML={{ __html: excerpt }} />\n              </article>\n            );\n          })}\n        </main>\n      </Layout>\n    );\n  }\n}\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query BlogPageQuery {\n    avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 100, height: 100) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        title\n        author\n        social {\n          twitter\n          github\n          linkedin\n          medium\n          stackoverflow\n        }\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___publishedAt], order: DESC }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            slug\n            id\n            summary\n            publishedAt(formatString: \"MMMM DD, YYYY\")\n            tags\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import Typography from \"typography\";\n\nconst defaultFontFamilies = [\n  \"-apple-system\",\n  \"BlinkMacSystemFont\",\n  \"Segoe UI\",\n  \"Roboto\",\n  \"Oxygen\",\n  \"Ubuntu\",\n  \"Cantarell\",\n  \"Open Sans\",\n  \"Helvetica Neue\",\n  \"sans-serif\"\n];\n\nconst typo = new Typography({\n  headerFontFamily: [\"IBM Plex Serif\", ...defaultFontFamilies],\n  bodyFontFamily: [\"IBM Plex Sans\", ...defaultFontFamilies],\n  baseFontSize: 16,\n  baseLineHeight: 1.5\n});\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typo.injectStyles();\n}\n\nexport default typo;\nexport const rhythm = typo.rhythm;\nexport const scale = typo.scale;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport Image from \"gatsby-image\";\nimport \"./layout.css\";\n\nimport { rhythm, scale } from \"../utils/typography\";\n\nclass Layout extends React.Component {\n  render() {\n    const {\n      location,\n      title,\n      children,\n      avatar,\n      author,\n      hasNavbar = false\n    } = this.props;\n\n    const rootPath = `${__PATH_PREFIX__}/`;\n\n    const createHeader = () => (\n      <React.Fragment>\n        <header style={{ textAlign: \"center\", marginBottom: rhythm(2) }}>\n          <Image\n            fixed={avatar.childImageSharp.fixed}\n            alt={author}\n            style={{\n              marginBottom: 0,\n              minWidth: 100,\n              borderRadius: `50%`\n            }}\n          />\n          <h1>{author}</h1>\n          <nav>\n            <ul\n              style={{\n                listStyle: \"none\",\n                padding: 0,\n                margin: 0,\n                display: \"flex\",\n                justifyContent: \"center\"\n              }}\n            >\n              <li style={{ margin: \"0 5px\" }}>\n                <Link to=\"/blog\" style={{}}>\n                  Blog\n                </Link>\n              </li>\n              <li style={{ margin: \"0 5px\" }}>\n                <Link to=\"/\">About</Link>\n              </li>\n            </ul>\n          </nav>\n        </header>\n      </React.Fragment>\n    );\n\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(24),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`\n        }}\n      >\n        {hasNavbar && createHeader()}\n        {children}\n      </div>\n    );\n  }\n}\n\nexport default Layout;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}